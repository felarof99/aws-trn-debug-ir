#loc = loc(unknown)
module @jit__threefry_split_original attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main(%arg0: tensor<16x2x2xui32> loc(unknown)) -> tensor<16x2x3x2xui32> {
    %0 = stablehlo.iota dim = 0 : tensor<6xui32> loc(#loc24)
    %1 = stablehlo.slice %arg0 [0:16, 0:2, 0:1] : (tensor<16x2x2xui32>) -> tensor<16x2x1xui32> loc(#loc25)
    %2 = stablehlo.reshape %1 : (tensor<16x2x1xui32>) -> tensor<16x2xui32> loc(#loc26)
    %3 = stablehlo.slice %arg0 [0:16, 0:2, 1:2] : (tensor<16x2x2xui32>) -> tensor<16x2x1xui32> loc(#loc25)
    %4 = stablehlo.reshape %3 : (tensor<16x2x1xui32>) -> tensor<16x2xui32> loc(#loc26)
    %5 = stablehlo.slice %0 [0:3] : (tensor<6xui32>) -> tensor<3xui32> loc(#loc25)
    %6 = stablehlo.slice %0 [3:6] : (tensor<6xui32>) -> tensor<3xui32> loc(#loc25)
    %7 = stablehlo.broadcast_in_dim %5, dims = [1] : (tensor<3xui32>) -> tensor<1x3xui32> loc(#loc27)
    %8 = stablehlo.broadcast_in_dim %6, dims = [1] : (tensor<3xui32>) -> tensor<1x3xui32> loc(#loc27)
    %9 = stablehlo.broadcast_in_dim %2, dims = [0, 1] : (tensor<16x2xui32>) -> tensor<16x2x1xui32> loc(#loc27)
    %10 = stablehlo.broadcast_in_dim %4, dims = [0, 1] : (tensor<16x2xui32>) -> tensor<16x2x1xui32> loc(#loc27)
    %11 = stablehlo.broadcast_in_dim %7, dims = [1, 2] : (tensor<1x3xui32>) -> tensor<1x1x3xui32> loc(#loc27)
    %12 = stablehlo.broadcast_in_dim %8, dims = [1, 2] : (tensor<1x3xui32>) -> tensor<1x1x3xui32> loc(#loc27)
    %13 = stablehlo.xor %9, %10 : tensor<16x2x1xui32> loc(#loc28)
    %c = stablehlo.constant dense<466688986> : tensor<ui32> loc(#loc29)
    %14 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui32>) -> tensor<16x2x1xui32> loc(#loc28)
    %15 = stablehlo.xor %13, %14 : tensor<16x2x1xui32> loc(#loc28)
    %16 = stablehlo.broadcast_in_dim %11, dims = [0, 1, 2] : (tensor<1x1x3xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %17 = stablehlo.broadcast_in_dim %9, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %18 = stablehlo.add %16, %17 : tensor<16x2x3xui32> loc(#loc30)
    %19 = stablehlo.broadcast_in_dim %12, dims = [0, 1, 2] : (tensor<1x1x3xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %20 = stablehlo.broadcast_in_dim %10, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %21 = stablehlo.add %19, %20 : tensor<16x2x3xui32> loc(#loc30)
    %22 = stablehlo.add %18, %21 : tensor<16x2x3xui32> loc(#loc30)
    %c_0 = stablehlo.constant dense<13> : tensor<ui32> loc(#loc29)
    %23 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %24 = stablehlo.shift_left %21, %23 : tensor<16x2x3xui32> loc(#loc31)
    %c_1 = stablehlo.constant dense<19> : tensor<ui32> loc(#loc29)
    %25 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %26 = stablehlo.shift_right_logical %21, %25 : tensor<16x2x3xui32> loc(#loc32)
    %27 = stablehlo.or %24, %26 : tensor<16x2x3xui32> loc(#loc33)
    %28 = stablehlo.xor %22, %27 : tensor<16x2x3xui32> loc(#loc28)
    %29 = stablehlo.add %22, %28 : tensor<16x2x3xui32> loc(#loc30)
    %c_2 = stablehlo.constant dense<15> : tensor<ui32> loc(#loc29)
    %30 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %31 = stablehlo.shift_left %28, %30 : tensor<16x2x3xui32> loc(#loc31)
    %c_3 = stablehlo.constant dense<17> : tensor<ui32> loc(#loc29)
    %32 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %33 = stablehlo.shift_right_logical %28, %32 : tensor<16x2x3xui32> loc(#loc32)
    %34 = stablehlo.or %31, %33 : tensor<16x2x3xui32> loc(#loc33)
    %35 = stablehlo.xor %29, %34 : tensor<16x2x3xui32> loc(#loc28)
    %36 = stablehlo.add %29, %35 : tensor<16x2x3xui32> loc(#loc30)
    %c_4 = stablehlo.constant dense<26> : tensor<ui32> loc(#loc29)
    %37 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %38 = stablehlo.shift_left %35, %37 : tensor<16x2x3xui32> loc(#loc31)
    %c_5 = stablehlo.constant dense<6> : tensor<ui32> loc(#loc29)
    %39 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %40 = stablehlo.shift_right_logical %35, %39 : tensor<16x2x3xui32> loc(#loc32)
    %41 = stablehlo.or %38, %40 : tensor<16x2x3xui32> loc(#loc33)
    %42 = stablehlo.xor %36, %41 : tensor<16x2x3xui32> loc(#loc28)
    %43 = stablehlo.add %36, %42 : tensor<16x2x3xui32> loc(#loc30)
    %c_6 = stablehlo.constant dense<6> : tensor<ui32> loc(#loc29)
    %44 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %45 = stablehlo.shift_left %42, %44 : tensor<16x2x3xui32> loc(#loc31)
    %c_7 = stablehlo.constant dense<26> : tensor<ui32> loc(#loc29)
    %46 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %47 = stablehlo.shift_right_logical %42, %46 : tensor<16x2x3xui32> loc(#loc32)
    %48 = stablehlo.or %45, %47 : tensor<16x2x3xui32> loc(#loc33)
    %49 = stablehlo.xor %43, %48 : tensor<16x2x3xui32> loc(#loc28)
    %50 = stablehlo.broadcast_in_dim %10, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %51 = stablehlo.add %43, %50 : tensor<16x2x3xui32> loc(#loc30)
    %52 = stablehlo.broadcast_in_dim %15, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %53 = stablehlo.add %49, %52 : tensor<16x2x3xui32> loc(#loc30)
    %c_8 = stablehlo.constant dense<1> : tensor<ui32> loc(#loc29)
    %54 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %55 = stablehlo.add %53, %54 : tensor<16x2x3xui32> loc(#loc30)
    %56 = stablehlo.add %51, %55 : tensor<16x2x3xui32> loc(#loc30)
    %c_9 = stablehlo.constant dense<17> : tensor<ui32> loc(#loc29)
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %58 = stablehlo.shift_left %55, %57 : tensor<16x2x3xui32> loc(#loc31)
    %c_10 = stablehlo.constant dense<15> : tensor<ui32> loc(#loc29)
    %59 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %60 = stablehlo.shift_right_logical %55, %59 : tensor<16x2x3xui32> loc(#loc32)
    %61 = stablehlo.or %58, %60 : tensor<16x2x3xui32> loc(#loc33)
    %62 = stablehlo.xor %56, %61 : tensor<16x2x3xui32> loc(#loc28)
    %63 = stablehlo.add %56, %62 : tensor<16x2x3xui32> loc(#loc30)
    %c_11 = stablehlo.constant dense<29> : tensor<ui32> loc(#loc29)
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %65 = stablehlo.shift_left %62, %64 : tensor<16x2x3xui32> loc(#loc31)
    %c_12 = stablehlo.constant dense<3> : tensor<ui32> loc(#loc29)
    %66 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %67 = stablehlo.shift_right_logical %62, %66 : tensor<16x2x3xui32> loc(#loc32)
    %68 = stablehlo.or %65, %67 : tensor<16x2x3xui32> loc(#loc33)
    %69 = stablehlo.xor %63, %68 : tensor<16x2x3xui32> loc(#loc28)
    %70 = stablehlo.add %63, %69 : tensor<16x2x3xui32> loc(#loc30)
    %c_13 = stablehlo.constant dense<16> : tensor<ui32> loc(#loc29)
    %71 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %72 = stablehlo.shift_left %69, %71 : tensor<16x2x3xui32> loc(#loc31)
    %c_14 = stablehlo.constant dense<16> : tensor<ui32> loc(#loc29)
    %73 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %74 = stablehlo.shift_right_logical %69, %73 : tensor<16x2x3xui32> loc(#loc32)
    %75 = stablehlo.or %72, %74 : tensor<16x2x3xui32> loc(#loc33)
    %76 = stablehlo.xor %70, %75 : tensor<16x2x3xui32> loc(#loc28)
    %77 = stablehlo.add %70, %76 : tensor<16x2x3xui32> loc(#loc30)
    %c_15 = stablehlo.constant dense<24> : tensor<ui32> loc(#loc29)
    %78 = stablehlo.broadcast_in_dim %c_15, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %79 = stablehlo.shift_left %76, %78 : tensor<16x2x3xui32> loc(#loc31)
    %c_16 = stablehlo.constant dense<8> : tensor<ui32> loc(#loc29)
    %80 = stablehlo.broadcast_in_dim %c_16, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %81 = stablehlo.shift_right_logical %76, %80 : tensor<16x2x3xui32> loc(#loc32)
    %82 = stablehlo.or %79, %81 : tensor<16x2x3xui32> loc(#loc33)
    %83 = stablehlo.xor %77, %82 : tensor<16x2x3xui32> loc(#loc28)
    %84 = stablehlo.broadcast_in_dim %15, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %85 = stablehlo.add %77, %84 : tensor<16x2x3xui32> loc(#loc30)
    %86 = stablehlo.broadcast_in_dim %9, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %87 = stablehlo.add %83, %86 : tensor<16x2x3xui32> loc(#loc30)
    %c_17 = stablehlo.constant dense<2> : tensor<ui32> loc(#loc29)
    %88 = stablehlo.broadcast_in_dim %c_17, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %89 = stablehlo.add %87, %88 : tensor<16x2x3xui32> loc(#loc30)
    %90 = stablehlo.add %85, %89 : tensor<16x2x3xui32> loc(#loc30)
    %c_18 = stablehlo.constant dense<13> : tensor<ui32> loc(#loc29)
    %91 = stablehlo.broadcast_in_dim %c_18, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %92 = stablehlo.shift_left %89, %91 : tensor<16x2x3xui32> loc(#loc31)
    %c_19 = stablehlo.constant dense<19> : tensor<ui32> loc(#loc29)
    %93 = stablehlo.broadcast_in_dim %c_19, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %94 = stablehlo.shift_right_logical %89, %93 : tensor<16x2x3xui32> loc(#loc32)
    %95 = stablehlo.or %92, %94 : tensor<16x2x3xui32> loc(#loc33)
    %96 = stablehlo.xor %90, %95 : tensor<16x2x3xui32> loc(#loc28)
    %97 = stablehlo.add %90, %96 : tensor<16x2x3xui32> loc(#loc30)
    %c_20 = stablehlo.constant dense<15> : tensor<ui32> loc(#loc29)
    %98 = stablehlo.broadcast_in_dim %c_20, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %99 = stablehlo.shift_left %96, %98 : tensor<16x2x3xui32> loc(#loc31)
    %c_21 = stablehlo.constant dense<17> : tensor<ui32> loc(#loc29)
    %100 = stablehlo.broadcast_in_dim %c_21, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %101 = stablehlo.shift_right_logical %96, %100 : tensor<16x2x3xui32> loc(#loc32)
    %102 = stablehlo.or %99, %101 : tensor<16x2x3xui32> loc(#loc33)
    %103 = stablehlo.xor %97, %102 : tensor<16x2x3xui32> loc(#loc28)
    %104 = stablehlo.add %97, %103 : tensor<16x2x3xui32> loc(#loc30)
    %c_22 = stablehlo.constant dense<26> : tensor<ui32> loc(#loc29)
    %105 = stablehlo.broadcast_in_dim %c_22, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %106 = stablehlo.shift_left %103, %105 : tensor<16x2x3xui32> loc(#loc31)
    %c_23 = stablehlo.constant dense<6> : tensor<ui32> loc(#loc29)
    %107 = stablehlo.broadcast_in_dim %c_23, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %108 = stablehlo.shift_right_logical %103, %107 : tensor<16x2x3xui32> loc(#loc32)
    %109 = stablehlo.or %106, %108 : tensor<16x2x3xui32> loc(#loc33)
    %110 = stablehlo.xor %104, %109 : tensor<16x2x3xui32> loc(#loc28)
    %111 = stablehlo.add %104, %110 : tensor<16x2x3xui32> loc(#loc30)
    %c_24 = stablehlo.constant dense<6> : tensor<ui32> loc(#loc29)
    %112 = stablehlo.broadcast_in_dim %c_24, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %113 = stablehlo.shift_left %110, %112 : tensor<16x2x3xui32> loc(#loc31)
    %c_25 = stablehlo.constant dense<26> : tensor<ui32> loc(#loc29)
    %114 = stablehlo.broadcast_in_dim %c_25, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %115 = stablehlo.shift_right_logical %110, %114 : tensor<16x2x3xui32> loc(#loc32)
    %116 = stablehlo.or %113, %115 : tensor<16x2x3xui32> loc(#loc33)
    %117 = stablehlo.xor %111, %116 : tensor<16x2x3xui32> loc(#loc28)
    %118 = stablehlo.broadcast_in_dim %9, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %119 = stablehlo.add %111, %118 : tensor<16x2x3xui32> loc(#loc30)
    %120 = stablehlo.broadcast_in_dim %10, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %121 = stablehlo.add %117, %120 : tensor<16x2x3xui32> loc(#loc30)
    %c_26 = stablehlo.constant dense<3> : tensor<ui32> loc(#loc29)
    %122 = stablehlo.broadcast_in_dim %c_26, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %123 = stablehlo.add %121, %122 : tensor<16x2x3xui32> loc(#loc30)
    %124 = stablehlo.add %119, %123 : tensor<16x2x3xui32> loc(#loc30)
    %c_27 = stablehlo.constant dense<17> : tensor<ui32> loc(#loc29)
    %125 = stablehlo.broadcast_in_dim %c_27, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %126 = stablehlo.shift_left %123, %125 : tensor<16x2x3xui32> loc(#loc31)
    %c_28 = stablehlo.constant dense<15> : tensor<ui32> loc(#loc29)
    %127 = stablehlo.broadcast_in_dim %c_28, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %128 = stablehlo.shift_right_logical %123, %127 : tensor<16x2x3xui32> loc(#loc32)
    %129 = stablehlo.or %126, %128 : tensor<16x2x3xui32> loc(#loc33)
    %130 = stablehlo.xor %124, %129 : tensor<16x2x3xui32> loc(#loc28)
    %131 = stablehlo.add %124, %130 : tensor<16x2x3xui32> loc(#loc30)
    %c_29 = stablehlo.constant dense<29> : tensor<ui32> loc(#loc29)
    %132 = stablehlo.broadcast_in_dim %c_29, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %133 = stablehlo.shift_left %130, %132 : tensor<16x2x3xui32> loc(#loc31)
    %c_30 = stablehlo.constant dense<3> : tensor<ui32> loc(#loc29)
    %134 = stablehlo.broadcast_in_dim %c_30, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %135 = stablehlo.shift_right_logical %130, %134 : tensor<16x2x3xui32> loc(#loc32)
    %136 = stablehlo.or %133, %135 : tensor<16x2x3xui32> loc(#loc33)
    %137 = stablehlo.xor %131, %136 : tensor<16x2x3xui32> loc(#loc28)
    %138 = stablehlo.add %131, %137 : tensor<16x2x3xui32> loc(#loc30)
    %c_31 = stablehlo.constant dense<16> : tensor<ui32> loc(#loc29)
    %139 = stablehlo.broadcast_in_dim %c_31, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %140 = stablehlo.shift_left %137, %139 : tensor<16x2x3xui32> loc(#loc31)
    %c_32 = stablehlo.constant dense<16> : tensor<ui32> loc(#loc29)
    %141 = stablehlo.broadcast_in_dim %c_32, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %142 = stablehlo.shift_right_logical %137, %141 : tensor<16x2x3xui32> loc(#loc32)
    %143 = stablehlo.or %140, %142 : tensor<16x2x3xui32> loc(#loc33)
    %144 = stablehlo.xor %138, %143 : tensor<16x2x3xui32> loc(#loc28)
    %145 = stablehlo.add %138, %144 : tensor<16x2x3xui32> loc(#loc30)
    %c_33 = stablehlo.constant dense<24> : tensor<ui32> loc(#loc29)
    %146 = stablehlo.broadcast_in_dim %c_33, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %147 = stablehlo.shift_left %144, %146 : tensor<16x2x3xui32> loc(#loc31)
    %c_34 = stablehlo.constant dense<8> : tensor<ui32> loc(#loc29)
    %148 = stablehlo.broadcast_in_dim %c_34, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %149 = stablehlo.shift_right_logical %144, %148 : tensor<16x2x3xui32> loc(#loc32)
    %150 = stablehlo.or %147, %149 : tensor<16x2x3xui32> loc(#loc33)
    %151 = stablehlo.xor %145, %150 : tensor<16x2x3xui32> loc(#loc28)
    %152 = stablehlo.broadcast_in_dim %10, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %153 = stablehlo.add %145, %152 : tensor<16x2x3xui32> loc(#loc30)
    %154 = stablehlo.broadcast_in_dim %15, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %155 = stablehlo.add %151, %154 : tensor<16x2x3xui32> loc(#loc30)
    %c_35 = stablehlo.constant dense<4> : tensor<ui32> loc(#loc29)
    %156 = stablehlo.broadcast_in_dim %c_35, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %157 = stablehlo.add %155, %156 : tensor<16x2x3xui32> loc(#loc30)
    %158 = stablehlo.add %153, %157 : tensor<16x2x3xui32> loc(#loc30)
    %c_36 = stablehlo.constant dense<13> : tensor<ui32> loc(#loc29)
    %159 = stablehlo.broadcast_in_dim %c_36, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %160 = stablehlo.shift_left %157, %159 : tensor<16x2x3xui32> loc(#loc31)
    %c_37 = stablehlo.constant dense<19> : tensor<ui32> loc(#loc29)
    %161 = stablehlo.broadcast_in_dim %c_37, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %162 = stablehlo.shift_right_logical %157, %161 : tensor<16x2x3xui32> loc(#loc32)
    %163 = stablehlo.or %160, %162 : tensor<16x2x3xui32> loc(#loc33)
    %164 = stablehlo.xor %158, %163 : tensor<16x2x3xui32> loc(#loc28)
    %165 = stablehlo.add %158, %164 : tensor<16x2x3xui32> loc(#loc30)
    %c_38 = stablehlo.constant dense<15> : tensor<ui32> loc(#loc29)
    %166 = stablehlo.broadcast_in_dim %c_38, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %167 = stablehlo.shift_left %164, %166 : tensor<16x2x3xui32> loc(#loc31)
    %c_39 = stablehlo.constant dense<17> : tensor<ui32> loc(#loc29)
    %168 = stablehlo.broadcast_in_dim %c_39, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %169 = stablehlo.shift_right_logical %164, %168 : tensor<16x2x3xui32> loc(#loc32)
    %170 = stablehlo.or %167, %169 : tensor<16x2x3xui32> loc(#loc33)
    %171 = stablehlo.xor %165, %170 : tensor<16x2x3xui32> loc(#loc28)
    %172 = stablehlo.add %165, %171 : tensor<16x2x3xui32> loc(#loc30)
    %c_40 = stablehlo.constant dense<26> : tensor<ui32> loc(#loc29)
    %173 = stablehlo.broadcast_in_dim %c_40, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %174 = stablehlo.shift_left %171, %173 : tensor<16x2x3xui32> loc(#loc31)
    %c_41 = stablehlo.constant dense<6> : tensor<ui32> loc(#loc29)
    %175 = stablehlo.broadcast_in_dim %c_41, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %176 = stablehlo.shift_right_logical %171, %175 : tensor<16x2x3xui32> loc(#loc32)
    %177 = stablehlo.or %174, %176 : tensor<16x2x3xui32> loc(#loc33)
    %178 = stablehlo.xor %172, %177 : tensor<16x2x3xui32> loc(#loc28)
    %179 = stablehlo.add %172, %178 : tensor<16x2x3xui32> loc(#loc30)
    %c_42 = stablehlo.constant dense<6> : tensor<ui32> loc(#loc29)
    %180 = stablehlo.broadcast_in_dim %c_42, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc31)
    %181 = stablehlo.shift_left %178, %180 : tensor<16x2x3xui32> loc(#loc31)
    %c_43 = stablehlo.constant dense<26> : tensor<ui32> loc(#loc29)
    %182 = stablehlo.broadcast_in_dim %c_43, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc32)
    %183 = stablehlo.shift_right_logical %178, %182 : tensor<16x2x3xui32> loc(#loc32)
    %184 = stablehlo.or %181, %183 : tensor<16x2x3xui32> loc(#loc33)
    %185 = stablehlo.xor %179, %184 : tensor<16x2x3xui32> loc(#loc28)
    %186 = stablehlo.broadcast_in_dim %15, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %187 = stablehlo.add %179, %186 : tensor<16x2x3xui32> loc(#loc30)
    %188 = stablehlo.broadcast_in_dim %9, dims = [0, 1, 2] : (tensor<16x2x1xui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %189 = stablehlo.add %185, %188 : tensor<16x2x3xui32> loc(#loc30)
    %c_44 = stablehlo.constant dense<5> : tensor<ui32> loc(#loc29)
    %190 = stablehlo.broadcast_in_dim %c_44, dims = [] : (tensor<ui32>) -> tensor<16x2x3xui32> loc(#loc30)
    %191 = stablehlo.add %189, %190 : tensor<16x2x3xui32> loc(#loc30)
    %192 = stablehlo.concatenate %187, %191, dim = 2 : (tensor<16x2x3xui32>, tensor<16x2x3xui32>) -> tensor<16x2x6xui32> loc(#loc34)
    %193 = stablehlo.reshape %192 : (tensor<16x2x6xui32>) -> tensor<16x2x3x2xui32> loc(#loc35)
    return %193 : tensor<16x2x3x2xui32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("/home/ubuntu/roadrunner-fork/src/felafax/trainer_engine/models/llama3/jax/model.py":451:0)
#loc2 = loc("/opt/aws_neuronx_venv_pytorch_2_1/lib/python3.10/site-packages/equinox/_module.py":372:0)
#loc3 = loc("/opt/aws_neuronx_venv_pytorch_2_1/lib/python3.10/site-packages/equinox/_better_abstract.py":227:0)
#loc4 = loc("/opt/aws_neuronx_venv_pytorch_2_1/lib/python3.10/site-packages/equinox/_module.py":565:0)
#loc5 = loc("/home/ubuntu/roadrunner-fork/src/felafax/trainer_engine/models/llama3/jax/model.py":513:0)
#loc6 = loc("/home/ubuntu/roadrunner-fork/src/felafax/trainer_engine/models/llama3/jax/model.py":579:0)
#loc7 = loc("/opt/aws_neuronx_venv_pytorch_2_1/lib/python3.10/site-packages/equinox/_vmap_pmap.py":204:0)
#loc8 = loc("__init__"(#loc1))
#loc9 = loc("__init__"(#loc2))
#loc10 = loc("__call__"(#loc3))
#loc11 = loc("__call__"(#loc4))
#loc12 = loc("__init__"(#loc5))
#loc13 = loc("<lambda>"(#loc6))
#loc14 = loc("_fun_wrapper"(#loc7))
#loc15 = loc(callsite(#loc13 at #loc14))
#loc16 = loc(callsite(#loc11 at #loc15))
#loc17 = loc(callsite(#loc10 at #loc16))
#loc18 = loc(callsite(#loc9 at #loc17))
#loc19 = loc(callsite(#loc12 at #loc18))
#loc20 = loc(callsite(#loc11 at #loc19))
#loc21 = loc(callsite(#loc10 at #loc20))
#loc22 = loc(callsite(#loc9 at #loc21))
#loc23 = loc(callsite(#loc8 at #loc22))
#loc24 = loc("jit(_threefry_split_original)/jit(main)/iota"(#loc23))
#loc25 = loc("jit(_threefry_split_original)/jit(main)/slice"(#loc23))
#loc26 = loc("jit(_threefry_split_original)/jit(main)/squeeze"(#loc23))
#loc27 = loc("jit(_threefry_split_original)/jit(main)/broadcast_in_dim"(#loc23))
#loc28 = loc("jit(_threefry_split_original)/jit(main)/xor"(#loc23))
#loc29 = loc("jit(_threefry_split_original)/jit(main)/threefry2x32"(#loc23))
#loc30 = loc("jit(_threefry_split_original)/jit(main)/add"(#loc23))
#loc31 = loc("jit(_threefry_split_original)/jit(main)/shift_left"(#loc23))
#loc32 = loc("jit(_threefry_split_original)/jit(main)/shift_right_logical"(#loc23))
#loc33 = loc("jit(_threefry_split_original)/jit(main)/or"(#loc23))
#loc34 = loc("jit(_threefry_split_original)/jit(main)/concatenate"(#loc23))
#loc35 = loc("jit(_threefry_split_original)/jit(main)/reshape"(#loc23))
