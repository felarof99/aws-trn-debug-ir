#loc1 = loc("args[0]")
#loc2 = loc("args[1]")
#loc3 = loc("args[2]")
module @jit_dynamic_slice attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main(%arg0: tensor<4x4xui32> loc("args[0]"), %arg1: tensor<i32> loc("args[1]"), %arg2: tensor<i32> loc("args[2]")) -> (tensor<1x4xui32> {jax.result_info = ""}) {
    %0 = stablehlo.dynamic_slice %arg0, %arg1, %arg2, sizes = [1, 4] : (tensor<4x4xui32>, tensor<i32>, tensor<i32>) -> tensor<1x4xui32> loc(#loc27)
    return %0 : tensor<1x4xui32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc = loc(unknown)
#loc4 = loc("/home/ubuntu/roadrunner-fork/src/felafax/trainer_engine/models/llama3/jax/model.py":153:0)
#loc5 = loc("/opt/aws_neuronx_venv_pytorch_2_1/lib/python3.10/site-packages/equinox/_module.py":372:0)
#loc6 = loc("/opt/aws_neuronx_venv_pytorch_2_1/lib/python3.10/site-packages/equinox/_better_abstract.py":227:0)
#loc7 = loc("/opt/aws_neuronx_venv_pytorch_2_1/lib/python3.10/site-packages/equinox/_module.py":565:0)
#loc8 = loc("/home/ubuntu/roadrunner-fork/src/felafax/trainer_engine/models/llama3/jax/model.py":636:0)
#loc9 = loc("/home/ubuntu/roadrunner-fork/src/felafax/trainer_engine/checkpoint.py":235:0)
#loc10 = loc("/home/ubuntu/roadrunner-fork/src/felafax/trainer_engine/trainer.py":126:0)
#loc11 = loc("__init__"(#loc4))
#loc12 = loc("__init__"(#loc5))
#loc13 = loc("__call__"(#loc6))
#loc14 = loc("__call__"(#loc7))
#loc15 = loc("__init__"(#loc8))
#loc16 = loc("load_llama_from_hf"(#loc9))
#loc17 = loc("__init__"(#loc10))
#loc18 = loc(callsite(#loc16 at #loc17))
#loc19 = loc(callsite(#loc14 at #loc18))
#loc20 = loc(callsite(#loc13 at #loc19))
#loc21 = loc(callsite(#loc12 at #loc20))
#loc22 = loc(callsite(#loc15 at #loc21))
#loc23 = loc(callsite(#loc14 at #loc22))
#loc24 = loc(callsite(#loc13 at #loc23))
#loc25 = loc(callsite(#loc12 at #loc24))
#loc26 = loc(callsite(#loc11 at #loc25))
#loc27 = loc("jit(dynamic_slice)/jit(main)/dynamic_slice"(#loc26))
